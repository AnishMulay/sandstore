// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: proto/communication/communication.proto

package communication

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageRequest) Reset() {
	*x = MessageRequest{}
	mi := &file_proto_communication_communication_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRequest) ProtoMessage() {}

func (x *MessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRequest.ProtoReflect.Descriptor instead.
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{0}
}

func (x *MessageRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MessageRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MessageRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type MessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Body          []byte                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageResponse) Reset() {
	*x = MessageResponse{}
	mi := &file_proto_communication_communication_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageResponse) ProtoMessage() {}

func (x *MessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageResponse.ProtoReflect.Descriptor instead.
func (*MessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{1}
}

func (x *MessageResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MessageResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *MessageResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type StoreFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreFileRequest) Reset() {
	*x = StoreFileRequest{}
	mi := &file_proto_communication_communication_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreFileRequest) ProtoMessage() {}

func (x *StoreFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreFileRequest.ProtoReflect.Descriptor instead.
func (*StoreFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{2}
}

func (x *StoreFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StoreFileRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileRequest) Reset() {
	*x = ReadFileRequest{}
	mi := &file_proto_communication_communication_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileRequest) ProtoMessage() {}

func (x *ReadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileRequest.ProtoReflect.Descriptor instead.
func (*ReadFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{3}
}

func (x *ReadFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_proto_communication_communication_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type StoreChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreChunkRequest) Reset() {
	*x = StoreChunkRequest{}
	mi := &file_proto_communication_communication_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChunkRequest) ProtoMessage() {}

func (x *StoreChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChunkRequest.ProtoReflect.Descriptor instead.
func (*StoreChunkRequest) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{5}
}

func (x *StoreChunkRequest) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *StoreChunkRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReadChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadChunkRequest) Reset() {
	*x = ReadChunkRequest{}
	mi := &file_proto_communication_communication_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadChunkRequest) ProtoMessage() {}

func (x *ReadChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadChunkRequest.ProtoReflect.Descriptor instead.
func (*ReadChunkRequest) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{6}
}

func (x *ReadChunkRequest) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

type DeleteChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChunkRequest) Reset() {
	*x = DeleteChunkRequest{}
	mi := &file_proto_communication_communication_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChunkRequest) ProtoMessage() {}

func (x *DeleteChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChunkRequest.ProtoReflect.Descriptor instead.
func (*DeleteChunkRequest) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteChunkRequest) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

type StoreMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	ChunkIds      []string               `protobuf:"bytes,2,rep,name=chunk_ids,json=chunkIds,proto3" json:"chunk_ids,omitempty"`
	FileSize      int64                  `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreMetadataRequest) Reset() {
	*x = StoreMetadataRequest{}
	mi := &file_proto_communication_communication_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreMetadataRequest) ProtoMessage() {}

func (x *StoreMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreMetadataRequest.ProtoReflect.Descriptor instead.
func (*StoreMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{8}
}

func (x *StoreMetadataRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *StoreMetadataRequest) GetChunkIds() []string {
	if x != nil {
		return x.ChunkIds
	}
	return nil
}

func (x *StoreMetadataRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *StoreMetadataRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type DeleteMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMetadataRequest) Reset() {
	*x = DeleteMetadataRequest{}
	mi := &file_proto_communication_communication_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMetadataRequest) ProtoMessage() {}

func (x *DeleteMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMetadataRequest.ProtoReflect.Descriptor instead.
func (*DeleteMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteMetadataRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type StopServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopServer) Reset() {
	*x = StopServer{}
	mi := &file_proto_communication_communication_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServer) ProtoMessage() {}

func (x *StopServer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServer.ProtoReflect.Descriptor instead.
func (*StopServer) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{10}
}

type RequestVoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateId   string                 `protobuf:"bytes,2,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	LastLogIndex  int64                  `protobuf:"varint,3,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm   int64                  `protobuf:"varint,4,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestVoteRequest) Reset() {
	*x = RequestVoteRequest{}
	mi := &file_proto_communication_communication_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteRequest) ProtoMessage() {}

func (x *RequestVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteRequest.ProtoReflect.Descriptor instead.
func (*RequestVoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{11}
}

func (x *RequestVoteRequest) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteRequest) GetCandidateId() string {
	if x != nil {
		return x.CandidateId
	}
	return ""
}

func (x *RequestVoteRequest) GetLastLogIndex() int64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *RequestVoteRequest) GetLastLogTerm() int64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type AppendEntriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId      string                 `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	PrevLogIndex  int64                  `protobuf:"varint,3,opt,name=prev_log_index,json=prevLogIndex,proto3" json:"prev_log_index,omitempty"`
	PrevLogTerm   int64                  `protobuf:"varint,4,opt,name=prev_log_term,json=prevLogTerm,proto3" json:"prev_log_term,omitempty"`
	Entries       []byte                 `protobuf:"bytes,5,opt,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit  int64                  `protobuf:"varint,6,opt,name=leader_commit,json=leaderCommit,proto3" json:"leader_commit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntriesRequest) Reset() {
	*x = AppendEntriesRequest{}
	mi := &file_proto_communication_communication_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesRequest) ProtoMessage() {}

func (x *AppendEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_communication_communication_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesRequest.ProtoReflect.Descriptor instead.
func (*AppendEntriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_communication_communication_proto_rawDescGZIP(), []int{12}
}

func (x *AppendEntriesRequest) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *AppendEntriesRequest) GetPrevLogIndex() int64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendEntriesRequest) GetPrevLogTerm() int64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendEntriesRequest) GetEntries() []byte {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendEntriesRequest) GetLeaderCommit() int64 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

var File_proto_communication_communication_proto protoreflect.FileDescriptor

const file_proto_communication_communication_proto_rawDesc = "" +
	"\n" +
	"'proto/communication/communication.proto\x12\rcommunication\"R\n" +
	"\x0eMessageRequest\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\"\xbc\x01\n" +
	"\x0fMessageResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x12\n" +
	"\x04body\x18\x02 \x01(\fR\x04body\x12E\n" +
	"\aheaders\x18\x03 \x03(\v2+.communication.MessageResponse.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\":\n" +
	"\x10StoreFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"%\n" +
	"\x0fReadFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"'\n" +
	"\x11DeleteFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"B\n" +
	"\x11StoreChunkRequest\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"-\n" +
	"\x10ReadChunkRequest\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\"/\n" +
	"\x12DeleteChunkRequest\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\"\x8b\x01\n" +
	"\x14StoreMetadataRequest\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x12\x1b\n" +
	"\tchunk_ids\x18\x02 \x03(\tR\bchunkIds\x12\x1b\n" +
	"\tfile_size\x18\x03 \x01(\x03R\bfileSize\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"0\n" +
	"\x15DeleteMetadataRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\"\f\n" +
	"\n" +
	"StopServer\"\x95\x01\n" +
	"\x12RequestVoteRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12!\n" +
	"\fcandidate_id\x18\x02 \x01(\tR\vcandidateId\x12$\n" +
	"\x0elast_log_index\x18\x03 \x01(\x03R\flastLogIndex\x12\"\n" +
	"\rlast_log_term\x18\x04 \x01(\x03R\vlastLogTerm\"\xd0\x01\n" +
	"\x14AppendEntriesRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\tR\bleaderId\x12$\n" +
	"\x0eprev_log_index\x18\x03 \x01(\x03R\fprevLogIndex\x12\"\n" +
	"\rprev_log_term\x18\x04 \x01(\x03R\vprevLogTerm\x12\x18\n" +
	"\aentries\x18\x05 \x01(\fR\aentries\x12#\n" +
	"\rleader_commit\x18\x06 \x01(\x03R\fleaderCommit2^\n" +
	"\x0eMessageService\x12L\n" +
	"\vSendMessage\x12\x1d.communication.MessageRequest\x1a\x1e.communication.MessageResponseB5Z3github.com/AnishMulay/sandstore/proto/communicationb\x06proto3"

var (
	file_proto_communication_communication_proto_rawDescOnce sync.Once
	file_proto_communication_communication_proto_rawDescData []byte
)

func file_proto_communication_communication_proto_rawDescGZIP() []byte {
	file_proto_communication_communication_proto_rawDescOnce.Do(func() {
		file_proto_communication_communication_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_communication_communication_proto_rawDesc), len(file_proto_communication_communication_proto_rawDesc)))
	})
	return file_proto_communication_communication_proto_rawDescData
}

var file_proto_communication_communication_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_communication_communication_proto_goTypes = []any{
	(*MessageRequest)(nil),        // 0: communication.MessageRequest
	(*MessageResponse)(nil),       // 1: communication.MessageResponse
	(*StoreFileRequest)(nil),      // 2: communication.StoreFileRequest
	(*ReadFileRequest)(nil),       // 3: communication.ReadFileRequest
	(*DeleteFileRequest)(nil),     // 4: communication.DeleteFileRequest
	(*StoreChunkRequest)(nil),     // 5: communication.StoreChunkRequest
	(*ReadChunkRequest)(nil),      // 6: communication.ReadChunkRequest
	(*DeleteChunkRequest)(nil),    // 7: communication.DeleteChunkRequest
	(*StoreMetadataRequest)(nil),  // 8: communication.StoreMetadataRequest
	(*DeleteMetadataRequest)(nil), // 9: communication.DeleteMetadataRequest
	(*StopServer)(nil),            // 10: communication.StopServer
	(*RequestVoteRequest)(nil),    // 11: communication.RequestVoteRequest
	(*AppendEntriesRequest)(nil),  // 12: communication.AppendEntriesRequest
	nil,                           // 13: communication.MessageResponse.HeadersEntry
}
var file_proto_communication_communication_proto_depIdxs = []int32{
	13, // 0: communication.MessageResponse.headers:type_name -> communication.MessageResponse.HeadersEntry
	0,  // 1: communication.MessageService.SendMessage:input_type -> communication.MessageRequest
	1,  // 2: communication.MessageService.SendMessage:output_type -> communication.MessageResponse
	2,  // [2:3] is the sub-list for method output_type
	1,  // [1:2] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_proto_communication_communication_proto_init() }
func file_proto_communication_communication_proto_init() {
	if File_proto_communication_communication_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_communication_communication_proto_rawDesc), len(file_proto_communication_communication_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_communication_communication_proto_goTypes,
		DependencyIndexes: file_proto_communication_communication_proto_depIdxs,
		MessageInfos:      file_proto_communication_communication_proto_msgTypes,
	}.Build()
	File_proto_communication_communication_proto = out.File
	file_proto_communication_communication_proto_goTypes = nil
	file_proto_communication_communication_proto_depIdxs = nil
}
